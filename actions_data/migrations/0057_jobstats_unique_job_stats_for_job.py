# Generated by Django 5.1 on 2024-10-31 15:24

from django.db import migrations, models
from django.db.models import Max


def remove_duplicate_job_stats(apps, schema_editor):
    JobStats = apps.get_model("actions_data", "JobStats")

    # Get all job_ids that have duplicates
    duplicate_job_ids = (
        JobStats.objects.values("job_id")
        .annotate(count=models.Count("id"))
        .filter(count__gt=1)
        .values_list("job_id", flat=True)
    )

    # For each job_id with duplicates
    for job_id in duplicate_job_ids:
        # Keep only the most recent entry (highest ID)
        latest_entry_id = JobStats.objects.filter(job_id=job_id).aggregate(Max("id"))[
            "id__max"
        ]

        # Delete all other entries for this job_id
        JobStats.objects.filter(job_id=job_id).exclude(id=latest_entry_id).delete()


class Migration(migrations.Migration):

    dependencies = [
        ("actions_data", "0056_alter_workflowrun_display_title_and_more"),
    ]

    operations = [
        # First, run the function to remove duplicates
        migrations.RunPython(
            remove_duplicate_job_stats, reverse_code=migrations.RunPython.noop
        ),
        # Then, add the unique constraint
        migrations.AddConstraint(
            model_name="jobstats",
            constraint=models.UniqueConstraint(
                fields=("job_id",), name="unique_job_stats_for_job"
            ),
        ),
    ]
