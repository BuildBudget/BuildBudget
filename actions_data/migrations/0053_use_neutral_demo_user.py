# Generated by Django 5.1 on 2024-10-28 16:47
from django.conf import settings
from django.db import migrations


# Removes all other associations from demo Webhook and associates it with the demo user
def associate_demo_user_with_demo_webhook(apps, schema_editor):
    Webhook = apps.get_model("actions_data", "Webhook")
    User = apps.get_model("auth", "User")
    # first try to get the demo user if it exists
    demo_user = User.objects.filter(username=settings.DEMO_USERNAME).first()
    if not demo_user:
        demo_user = User.objects.create_user(
            username=settings.DEMO_USERNAME, email="demo@gmail.com"
        )
    demo_webhook = Webhook.objects.get_or_create(
        webhook_id=settings.DEMO_WEBHOOK_ID,
        hook_installation_target_id=1,
        hook_installation_target_type="demo",
    )[0]
    demo_webhook.users.clear()
    demo_webhook.users.add(demo_user)
    demo_webhook.save()
    # Assign all RepositoryAccess entries of repos belonging to OwnerEntities marked as "fetch_from_api" to the demo user
    RepositoryAccess = apps.get_model("actions_data", "RepositoryAccess")
    OwnerEntity = apps.get_model("actions_data", "OwnerEntity")
    for owner_entity in OwnerEntity.objects.filter(fetch_from_api=True):
        for repo_access in RepositoryAccess.objects.filter(
            repository__owner=owner_entity
        ):
            repo_access.auth_user = demo_user
            repo_access.save()


class Migration(migrations.Migration):

    dependencies = [
        ("actions_data", "0052_make_hook_attributes_nullable"),
    ]

    operations = [
        migrations.RunPython(
            associate_demo_user_with_demo_webhook,
            reverse_code=migrations.RunPython.noop,
        ),
    ]
